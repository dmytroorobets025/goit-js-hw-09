{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,SAyBA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,GACFI,EAAQ,CAAEN,WAAUC,UAGtBM,EAAO,CAAEP,WAAUC,S,GAClBA,E,IAjCUQ,SAASC,cAAc,SAqC/BC,iBAAiB,UAnCD,SAAAC,GACvBA,EAAEC,iBAOF,IALA,IAAgCC,EAAAF,EAAEG,OAA1BC,EAAwBF,EAAxBb,MAAOgB,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OACjBC,EAAkBC,OAAOJ,EAAMK,OAC7BC,EAAiBF,OAAOH,EAAKI,OAC7BE,EAAmBH,OAAOF,EAAOG,OAE9BG,EAAI,EAAGA,GAAKD,EAAkBC,GAAK,EAC1CzB,EAAcyB,EAAGL,GACdM,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjB0B,EAAA9B,GAAS+B,OAAOC,QAAQ,qBAAoCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAEnE8B,OAAM,SAAAL,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAClB0B,EAAA9B,GAAS+B,OAAOI,QAAQ,oBAAmCF,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAGrEkB,GAAmBG,C","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport Notiflix from 'notiflix';\n\nconst refsForm = document.querySelector('.form');\n\nconst handleSubmitForm = e => {\n  e.preventDefault();\n\n  const { delay, step, amount } = e.target;\n  let delayForPromise = Number(delay.value);\n  const stepForPromise = Number(step.value);\n  const amountForPromise = Number(amount.value);\n\n  for (let i = 1; i <= amountForPromise; i += 1) {\n    createPromise(i, delayForPromise)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delayForPromise += stepForPromise;\n  }\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n\n      reject({ position, delay });\n    }, delay);\n  });\n}\n\nrefsForm.addEventListener('submit', handleSubmitForm);"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","e","preventDefault","_target","target","delay1","step","amount","delayForPromise","Number","value","stepForPromise","amountForPromise","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.dedc7b8d.js.map"}